<?php

/**
* This is the model base class for the table "sys_audio".
* DO NOT MODIFY THIS FILE! It is automatically generated by giix.
* If any changes are necessary, you must set or override the required
* property or method in class "SysAudio".
*
* Columns in table "sys_audio" available as properties of the model,
* and there are no model relations.
*
* @property integer $id
* @property integer $uid
* @property string $name
* @property string $summary
* @property string $singer
* @property string $uri
* @property string $source_type
* @property integer $play_order
* @property integer $listens
* @property integer $create_time
* @property string $cmt_count
* @property integer $glean_count
* @property integer $file_size
*
*/
abstract class BaseSysAudio extends YsActiveRecord {

public static function model($className=__CLASS__) {
return parent::model($className);
}

public function tableName() {
return 'sys_audio';
}

public static function representingColumn() {
return 'name';
}

public function rules() {
return array(
array('uid, name, uri, source_type, create_time', 'required'),
array('uid, play_order, listens, create_time, glean_count, file_size', 'numerical', 'integerOnly'=>true),
array('name', 'length', 'max'=>120),
array('summary', 'length', 'max'=>500),
array('singer', 'length', 'max'=>60),
array('uri', 'length', 'max'=>255),
array('source_type', 'length', 'max'=>6),
array('cmt_count', 'length', 'max'=>20),
array('summary, singer, play_order, listens, cmt_count, glean_count, file_size', 'default', 'setOnEmpty' => true, 'value' => null),
array('id, uid, name, summary, singer, uri, source_type, play_order, listens, create_time, cmt_count, glean_count, file_size', 'safe', 'on'=>'search'),
);
}

public function relations() {
return array(
);
}

public function pivotModels() {
return array(
);
}

public function attributeLabels() {
return array(
'id' => Yii::t('sys_audio', 'id'),
'uid' => Yii::t('sys_audio', 'uid'),
'name' => Yii::t('sys_audio', 'name'),
'summary' => Yii::t('sys_audio', 'summary'),
'singer' => Yii::t('sys_audio', 'singer'),
'uri' => Yii::t('sys_audio', 'uri'),
'source_type' => Yii::t('sys_audio', 'source_type'),
'play_order' => Yii::t('sys_audio', 'play_order'),
'listens' => Yii::t('sys_audio', 'listens'),
'create_time' => Yii::t('sys_audio', 'create_time'),
'cmt_count' => Yii::t('sys_audio', 'cmt_count'),
'glean_count' => Yii::t('sys_audio', 'glean_count'),
'file_size' => Yii::t('sys_audio', 'file_size'),
);
}

public function search() {
$criteria = new CDbCriteria;

$criteria->compare('id', $this->id);
$criteria->compare('uid', $this->uid);
$criteria->compare('name', $this->name, true);
$criteria->compare('summary', $this->summary, true);
$criteria->compare('singer', $this->singer, true);
$criteria->compare('uri', $this->uri, true);
$criteria->compare('source_type', $this->source_type, true);
$criteria->compare('play_order', $this->play_order);
$criteria->compare('listens', $this->listens);
$criteria->compare('create_time', $this->create_time);
$criteria->compare('cmt_count', $this->cmt_count, true);
$criteria->compare('glean_count', $this->glean_count);
$criteria->compare('file_size', $this->file_size);

return new CActiveDataProvider($this, array(
'criteria' => $criteria,
));
}
}