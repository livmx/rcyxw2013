<?php

/**
 * This is the model base class for the table "msg".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Msg".
 *
 * Columns in table "msg" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $sender
 * @property integer $recipient
 * @property string $sent
 * @property integer $read
 * @property string $subject
 * @property string $message
 *
 */
abstract class BaseMsg extends YsActiveRecord
{

    public static function model($className = __CLASS__)
    {
        return parent::model($className);
    }

    public function tableName()
    {
        return 'msg';
    }

    public static function representingColumn()
    {
        return 'sent';
    }

    public function rules()
    {
        return array(
            array('sender, recipient,  subject, message', 'required'),
            array('sender, recipient, read', 'numerical', 'integerOnly' => true),
            array('subject', 'length', 'max' => 255),
            array('id, sender, recipient, sent, read, subject, message', 'safe', 'on' => 'search'),
        );
    }

    public function relations()
    {
        return array(
        );
    }

    public function pivotModels()
    {
        return array(
        );
    }

    public function attributeLabels()
    {
        return array(
            'id' => Yii::t('msg', 'id'),
            'sender' => Yii::t('msg', 'sender'),
            'recipient' => Yii::t('msg', 'recipient'),
            'sent' => Yii::t('msg', 'sent'),
            'read' => Yii::t('msg', 'read'),
            'subject' => Yii::t('msg', 'subject'),
            'message' => Yii::t('msg', 'message'),
        );
    }

    public function search()
    {
        $criteria = new CDbCriteria;

        $criteria->compare('id', $this->id);
        $criteria->compare('sender', $this->sender);
        $criteria->compare('recipient', $this->recipient);
        $criteria->compare('sent', $this->sent, true);
        $criteria->compare('read', $this->read);
        $criteria->compare('subject', $this->subject, true);
        $criteria->compare('message', $this->message, true);

        return new CActiveDataProvider($this, array(
            'criteria' => $criteria,
        ));
    }

    protected function beforeSave(){
        if($this->getIsNewRecord()){
            $this->read = 0;

        }
        return parent::beforeSave();
    }
}