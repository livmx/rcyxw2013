<?php

/**
* This is the model base class for the table "comment".
* DO NOT MODIFY THIS FILE! It is automatically generated by giix.
* If any changes are necessary, you must set or override the required
* property or method in class "Comment".
*
* Columns in table "comment" available as properties of the model,
* and there are no model relations.
*
* @property integer $id
* @property integer $user_id
* @property integer $parent_id
* @property string $model
* @property integer $model_id
* @property integer $model_owner_id
* @property string $name
* @property string $url
* @property string $email
* @property string $text
* @property string $model_profile_data
* @property integer $status
* @property integer $create_time
* @property string $ip
* @property integer $level
* @property integer $root
* @property integer $lft
* @property integer $rgt
*
*/
abstract class BaseComment extends YsActiveRecord {

public static function model($className=__CLASS__) {
return parent::model($className);
}

public function tableName() {
return 'comment';
}

public static function representingColumn() {
return 'model';
}

public function rules() {
return array(
array('model, model_id, name, email, text, create_time', 'required'),
array('user_id, parent_id, model_id, model_owner_id, status, create_time, level, root, lft, rgt', 'numerical', 'integerOnly'=>true),
array('model', 'length', 'max'=>100),
array('name, url, email', 'length', 'max'=>150),
array('model_profile_data', 'length', 'max'=>400),
array('ip', 'length', 'max'=>20),
array('user_id, parent_id, model_owner_id, url, model_profile_data, status, ip, level, root, lft, rgt', 'default', 'setOnEmpty' => true, 'value' => null),
array('id, user_id, parent_id, model, model_id, model_owner_id, name, url, email, text, model_profile_data, status, create_time, ip, level, root, lft, rgt', 'safe', 'on'=>'search'),
);
}

public function relations() {
return array(
);
}

public function pivotModels() {
return array(
);
}

public function attributeLabels() {
return array(
'id' => Yii::t('comment', 'id'),
'user_id' => Yii::t('comment', 'user_id'),
'parent_id' => Yii::t('comment', 'parent_id'),
'model' => Yii::t('comment', 'model'),
'model_id' => Yii::t('comment', 'model_id'),
'model_owner_id' => Yii::t('comment', 'model_owner_id'),
'name' => Yii::t('comment', 'name'),
'url' => Yii::t('comment', 'url'),
'email' => Yii::t('comment', 'email'),
'text' => Yii::t('comment', 'text'),
'model_profile_data' => Yii::t('comment', 'model_profile_data'),
'status' => Yii::t('comment', 'status'),
'create_time' => Yii::t('comment', 'create_time'),
'ip' => Yii::t('comment', 'ip'),
'level' => Yii::t('comment', 'level'),
'root' => Yii::t('comment', 'root'),
'lft' => Yii::t('comment', 'lft'),
'rgt' => Yii::t('comment', 'rgt'),
);
}

public function search() {
$criteria = new CDbCriteria;

$criteria->compare('id', $this->id);
$criteria->compare('user_id', $this->user_id);
$criteria->compare('parent_id', $this->parent_id);
$criteria->compare('model', $this->model, true);
$criteria->compare('model_id', $this->model_id);
$criteria->compare('model_owner_id', $this->model_owner_id);
$criteria->compare('name', $this->name, true);
$criteria->compare('url', $this->url, true);
$criteria->compare('email', $this->email, true);
$criteria->compare('text', $this->text, true);
$criteria->compare('model_profile_data', $this->model_profile_data, true);
$criteria->compare('status', $this->status);
$criteria->compare('create_time', $this->create_time);
$criteria->compare('ip', $this->ip, true);
$criteria->compare('level', $this->level);
$criteria->compare('root', $this->root);
$criteria->compare('lft', $this->lft);
$criteria->compare('rgt', $this->rgt);

return new CActiveDataProvider($this, array(
'criteria' => $criteria,
));
}
}